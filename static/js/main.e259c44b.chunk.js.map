{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navi.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","result","credentialFromResult","GithubAuthProvider","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","autoFocus","src","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","fileRef","uid","uuidv4","uploadString","response","getDownloadURL","createAt","Date","now","owner","addDoc","collection","onFileChange","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","readAsDataURL","maxLength","htmlFor","faPlus","accept","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","onSnapshot","snapshot","tweetArray","docs","map","marginTop","item","Navi","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","getMyTweets","Tweets","query","where","orderBy","getDocs","forEach","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e259c44b.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBloOALmPMFFciZ51EhYQWpjiDEEay0Br0\",\n  authDomain: \"twitter-ff56c.firebaseapp.com\",\n  databaseURL: \"https://twitter-ff56c.firebaseapp.com/\",\n  projectId: \"twitter-ff56c\",\n  storageBucket: \"twitter-ff56c.appspot.com\",\n  messagingSenderId: \"155612840456\",\n  appId: \"1:155612840456:web:3ef1186123ecb6570947bd\",\n};\n\ninitializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\nimport { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await createUserWithEmailAndPassword(authService, email, password);\n      } else {\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          className=\"authInput\"\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Log in\" : \"CreateAccount\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { GoogleAuthProvider, GithubAuthProvider, signInWithPopup } from \"@firebase/auth\";\nimport { authService } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n      const result = await signInWithPopup(authService, provider);\n      // eslint-disable-next-line\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      // const token = credential.accessToken;\n    } else if (name === \"github\") {\n      provider = new GithubAuthProvider();\n      const result = await signInWithPopup(authService, provider);\n      // eslint-disable-next-line\n      const credential = GithubAuthProvider.credentialFromResult(result);\n      // const token = credential.accessToken;\n    }\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{ marginBottom: 30 }} />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { deleteDoc, doc, updateDoc } from \"@firebase/firestore\";\nimport { deleteObject, ref } from \"@firebase/storage\";\nimport { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Tweet = ({ tweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you wand to delete this tweet?\");\n    if (ok) {\n      await deleteDoc(doc(dbService, `tweets/${tweetObj.id}`));\n      if (tweetObj.attachmentUrl) {\n        await deleteObject(ref(storageService, tweetObj.attachmentUrl));\n      }\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await updateDoc(doc(dbService, `tweets/${tweetObj.id}`), { text: newTweet });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewTweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your tweet\"\n              value={newTweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{tweetObj.text}</h4>\n          {/* eslint-disable-next-line */}\n          {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Tweet;\n","import { addDoc, collection } from \"@firebase/firestore\";\nimport { getDownloadURL, ref, uploadString } from \"@firebase/storage\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"fbase\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TweetFactory = ({ userObj }) => {\n  const [tweet, setTweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (tweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n      const response = await uploadString(fileRef, attachment, \"data_url\");\n      attachmentUrl = await getDownloadURL(response.ref);\n    }\n    const tweetObj = {\n      text: tweet,\n      createAt: Date.now(),\n      owner: userObj.uid,\n      attachmentUrl,\n    };\n    await addDoc(collection(dbService, \"tweets\"), tweetObj);\n    setTweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setTweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={tweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n      <input type=\"submit\" value=\"Tweet\" />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          {/* eslint-disable-next-line */}\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default TweetFactory;\n","import { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { collection, onSnapshot } from \"@firebase/firestore\";\nimport Tweet from \"components/Tweet\";\nimport TweetFactory from \"components/TweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    onSnapshot(collection(dbService, \"tweets\"), (snapshot) => {\n      const tweetArray = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n      setTweets(tweetArray);\n    });\n  }, []);\n  return (\n    <div className=\"container\">\n      <TweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {tweets.map((item) => (\n          <Tweet key={item.id} tweetObj={item} isOwner={item.owner === userObj.uid} />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navi = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navi;\n","import React, { useEffect, useState } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport { useHistory } from \"react-router\";\nimport { collection, getDocs, orderBy, query, where } from \"@firebase/firestore\";\nimport { updateProfile } from \"@firebase/auth\";\n// eslint-disable-next-line\nexport default ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n    refreshUser();\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await updateProfile(userObj, { displayName: newDisplayName });\n    }\n    refreshUser();\n  };\n  const getMyTweets = async () => {\n    const Tweets = query(\n      collection(dbService, \"tweets\"),\n      where(\"owner\", \"==\", userObj.uid),\n      orderBy(\"createAt\")\n    );\n    const querySnapshot = await getDocs(Tweets);\n    querySnapshot.forEach((item) => {\n      // console.log(item.id, \" => \", item.data());\n    });\n  };\n  useEffect(() => {\n    getMyTweets();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navi from \"components/Navi\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navi userObj={userObj} />}\n      <Switch>\n        <>\n          {isLoggedIn ? (\n            <div\n              style={{\n                maxWidth: 890,\n                width: \"100%\",\n                margin: \"0 auto\",\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n              </Route>\n            </div>\n          ) : (\n            <>\n              <Route exact path=\"/\">\n                <Auth />\n              </Route>\n            </>\n          )}\n        </>\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj(user);\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({ ...user });\n    setUserObj(user);\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} />\n      ) : (\n        \"Initializing...\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Twitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}